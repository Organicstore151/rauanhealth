import os
import json
from datetime import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds_dict = json.loads(os.environ["CREDS_JSON"])
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)
sheet = client.open_by_url(os.environ["SPREADSHEET_URL"]).sheet1

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ü–∏—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞ –¥–µ–Ω—å (–≤–æ–¥–∞, –ø–∏—Ç–∞–Ω–∏–µ, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ —Ç.–¥.), —è –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω—é.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    row = [""] * 11  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫

    row[0] = datetime.now().strftime("%Y-%m-%d")

    for line in text.split('\n'):
        if "—Å—Ç—É–ª" in line:
            row[1] = line.split(":", 1)[-1].strip()
        elif "–≤–æ–¥–∞" in line:
            row[2] = line.split(":", 1)[-1].strip()
        elif "–¥–≤–∏–∂–µ–Ω–∏–µ" in line:
            row[3] = line.split(":", 1)[-1].strip()
        elif "–∑–∞–≤—Ç—Ä–∞–∫" in line:
            row[4] = line.split(":", 1)[-1].strip()
        elif "–æ–±–µ–¥" in line:
            row[5] = line.split(":", 1)[-1].strip()
        elif "—É–∂–∏–Ω" in line:
            row[6] = line.split(":", 1)[-1].strip()
        elif "–ø–µ—Ä–µ–∫—É—Å" in line:
            row[7] = line.split(":", 1)[-1].strip()
        elif "—Å–ª–∞–¥–∫–æ–µ" in line:
            row[8] = line.split(":", 1)[-1].strip()
        elif "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ" in line:
            row[9] = line.split(":", 1)[-1].strip()
        else:
            row[10] += line.strip() + " "

    sheet.append_row(row)
    await update.message.reply_text("‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º!")
    # –ö–æ–º–∞–Ω–¥–∞ /—É—Ç—Ä–æ ‚Äî —É—Ç—Ä–µ–Ω–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
async def morning(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚òÄÔ∏è –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –†–∞—É–∞–Ω!\n"
        "–í–æ—Ç 3 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∏—â–µ–≤–∞—Ä–µ–Ω–∏—è –∏ —ç–Ω–µ—Ä–≥–∏–∏:\n\n"
        "1. üíß –í—ã–ø–µ–π —Å—Ç–∞–∫–∞–Ω —Ç—ë–ø–ª–æ–π –≤–æ–¥—ã (–º–æ–∂–Ω–æ —Å –ª–∏–º–æ–Ω–æ–º)\n"
        "2. üçΩÔ∏è –ó–∞–≤—Ç—Ä–∞–∫ ‚Äî –æ–≤—Å—è–Ω–∫–∞, –≥—Ä–µ—á–∫–∞ –∏–ª–∏ —è–π—Ü–∞ + –æ–≤–æ—â–∏\n"
        "3. ü§∏ –†–∞–∑–º–∏–Ω–∫–∞ 5 –º–∏–Ω—É—Ç: –Ω–∞–∫–ª–æ–Ω—ã, ¬´–≤–µ–ª–æ—Å–∏–ø–µ–¥¬ª –∏ –ª—ë–≥–∫–∏–µ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è\n\n"
        "–ü—É—Å—Ç—å –¥–µ–Ω—å –±—É–¥–µ—Ç –ª—ë–≥–∫–∏–º –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º! üî•"
    )

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = ApplicationBuilder().token(os.environ["BOT_TOKEN"]).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("—É—Ç—Ä–æ", morning))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
app.run_polling()
